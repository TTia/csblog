// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Blog.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Navigazione dei post")]
    [NUnit.Framework.CategoryAttribute("cap4")]
    [NUnit.Framework.CategoryAttribute("clear")]
    public partial class NavigazioneDeiPostFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "4_introducing_posts.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("it-IT"), "Navigazione dei post", "Come Lettore\nVorrei che nel blog fossero presenti dei post\nPer potermi informare", ProgrammingLanguage.CSharp, new string[] {
                        "cap4",
                        "clear"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
  #line 9
    testRunner.Given("apro SBlog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dato ");
#line 10
    testRunner.Given("mi autentico come \"ttia@sblog.io\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dato ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Visualizzazione dei post")]
        public virtual void VisualizzazioneDeiPost()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Visualizzazione dei post", ((string[])(null)));
#line 12
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 13
    testRunner.Given("il post \"Lorem Ipsum\" esiste", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dato ");
#line 14
    testRunner.Then("il post \"Lorem Ipsum\" è leggibile su SBlog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Allora ");
#line 15
    testRunner.Then("ogni post ha un titolo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Allora ");
#line 16
    testRunner.And("ogni post ha dei dettagli", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 17
    testRunner.And("ogni post ha del contenuto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Espansione dell\'anteprima di un post")]
        public virtual void EspansioneDellAnteprimaDiUnPost()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Espansione dell\'anteprima di un post", ((string[])(null)));
#line 19
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 20
    testRunner.Given("il post \"Lorem Ipsum\" esiste", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dato ");
#line 21
    testRunner.And("il post \"Lorem Ipsum\" è leggibile su SBlog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 22
    testRunner.Then("il contenuto del post \"Lorem Ipsum\" è un\'anteprima dell\'intero post", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Allora ");
#line 23
    testRunner.When("espando il post \"Lorem Ipsum\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 24
    testRunner.Then("il contenuto del post \"Lorem Ipsum\" rappresenta l\'intero post", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Allora ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Lettura di un post")]
        public virtual void LetturaDiUnPost()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Lettura di un post", ((string[])(null)));
#line 26
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 27
    testRunner.Given("il post \"Lorem Ipsum\" esiste", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dato ");
#line 28
    testRunner.And("il post \"Lorem Ipsum\" è leggibile su SBlog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 29
    testRunner.When("espando il post \"Lorem Ipsum\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 30
    testRunner.Then("il titolo del post è \"Lorem Ipsum\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Allora ");
#line 31
    testRunner.And("il contenuto del titolo include \"Lorem ipsum\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 32
    testRunner.And("la pagina è intitolata \"Lorem Ipsum\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 33
    testRunner.And("posso tornare alla pagina iniziale", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
