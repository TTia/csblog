// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Blog.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Gestione dei post")]
    [NUnit.Framework.CategoryAttribute("cap3")]
    public partial class GestioneDeiPostFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "3_introducing_crud_validation.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("it-IT"), "Gestione dei post", "Come Autore\nVorrei poter inserire, modificare e rimuovere dei post su SBlog\nPer p" +
                    "oter documentare la mia tesi", ProgrammingLanguage.CSharp, new string[] {
                        "cap3"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
  #line 9
    testRunner.Given("apro CSBlog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dato ");
#line 10
    testRunner.Given("mi autentico come \"ttia@csblog.io\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dato ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Scrittura di un nuovo post")]
        [NUnit.Framework.CategoryAttribute("clear")]
        public virtual void ScritturaDiUnNuovoPost()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Scrittura di un nuovo post", new string[] {
                        "clear"});
#line 13
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 14
    testRunner.Given("il post \"Lorem Ipsum\" non è leggibile su CSBlog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dato ");
#line 15
    testRunner.And("apro la pagina per la creazione di un nuovo post", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 16
    testRunner.When("inserisco \"Lorem Ipsum\" come titolo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 17
    testRunner.And("inserisco del testo riempitivo come contenuto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 18
    testRunner.And("salvo il post", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 19
    testRunner.Then("il post \"Lorem Ipsum\" è stato creato con successo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Allora ");
#line 20
    testRunner.And("il post \"Lorem Ipsum\" è leggibile su CSBlog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cancellazione di un post")]
        public virtual void CancellazioneDiUnPost()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancellazione di un post", ((string[])(null)));
#line 22
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 23
    testRunner.Given("il post \"Lorem Ipsum\" esiste", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dato ");
#line 24
    testRunner.When("cancello il post \"Lorem Ipsum\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 25
    testRunner.Then("il post \"Lorem Ipsum\" è stato cancellato con successo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Allora ");
#line 26
    testRunner.And("il post \"Lorem Ipsum\" non è leggibile su CSBlog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Modifica di un post")]
        [NUnit.Framework.CategoryAttribute("clear")]
        public virtual void ModificaDiUnPost()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Modifica di un post", new string[] {
                        "clear"});
#line 29
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 30
    testRunner.Given("il post \"Lorem Ipsum2\" esiste", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dato ");
#line 31
    testRunner.When("modifico il post \"Lorem Ipsum2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 32
    testRunner.And("inserisco \"Lorem Ipsum\" come titolo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 33
    testRunner.And("inserisco \"Questo post è stato modificato\" come contenuto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 34
    testRunner.And("salvo il post", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 35
    testRunner.Then("il post \"Lorem Ipsum2\" non è leggibile su CSBlog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Allora ");
#line 36
    testRunner.And("il post \"Lorem Ipsum\" è leggibile su CSBlog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Tentativo di creazione di un post duplicato")]
        [NUnit.Framework.CategoryAttribute("clear")]
        public virtual void TentativoDiCreazioneDiUnPostDuplicato()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Tentativo di creazione di un post duplicato", new string[] {
                        "clear"});
#line 39
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 40
    testRunner.Given("il post \"Lorem Ipsum\" esiste", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dato ");
#line 41
    testRunner.Given("apro la pagina per la creazione di un nuovo post", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dato ");
#line 42
    testRunner.When("inserisco \"Lorem Ipsum\" come titolo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 43
    testRunner.And("inserisco del testo riempitivo come contenuto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 44
    testRunner.And("salvo il post", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 45
    testRunner.Then("compare l\'errore \"Il titolo è già presente.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Allora ");
#line 46
    testRunner.And("il post \"Lorem Ipsum\" è leggibile su CSBlog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Tentativo di creazione di un post con titolo invalido")]
        public virtual void TentativoDiCreazioneDiUnPostConTitoloInvalido()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Tentativo di creazione di un post con titolo invalido", ((string[])(null)));
#line 48
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 49
    testRunner.Given("apro la pagina per la creazione di un nuovo post", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dato ");
#line 50
    testRunner.When("inserisco \"LI\" come titolo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 51
    testRunner.And("inserisco del testo riempitivo come contenuto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 52
    testRunner.And("salvo il post", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 53
    testRunner.Then("compare l\'errore \"Il titolo deve essere compreso fra 5 e 100 caratteri.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Allora ");
#line 54
    testRunner.And("il post \"LI\" non è leggibile su CSBlog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Tentativo di creazione di un post con contenuto invalido")]
        public virtual void TentativoDiCreazioneDiUnPostConContenutoInvalido()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Tentativo di creazione di un post con contenuto invalido", ((string[])(null)));
#line 56
  this.ScenarioSetup(scenarioInfo);
#line 8
  this.FeatureBackground();
#line 57
    testRunner.Given("apro la pagina per la creazione di un nuovo post", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dato ");
#line 58
    testRunner.When("inserisco \"Lorem Ipsum\" come titolo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 59
    testRunner.And("inserisco \"Body\" come contenuto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 60
    testRunner.And("salvo il post", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 61
    testRunner.Then("compare l\'errore \"Il post deve essere almeno di 5 caratteri.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Allora ");
#line 62
    testRunner.And("il post \"Lorem Ipsum\" non è leggibile su CSBlog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
